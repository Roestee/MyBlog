@model Home

@{
    ViewData["Title"] = "HomeUpdate";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div>
    <input type="hidden" id="homeIdInput" value="@Model.Id" />
    <div class="border border-top border-dark mb-3"></div>
    <div class="d-flex flex-column gap-4" id="homeContainer">
        <div class="row">
            <div class="col">
                <h4 class="text-dark">Özet</h4>
                <div id="summaryContainer">
                    @{
                        if (Model.Summary == null)
                            await Html.RenderPartialAsync("Components/_AdminLayoutSummaryModal/Default", new Summary { HomeId = Model.Id });
                        else
                            await Html.RenderPartialAsync("Components/_AdminLayoutSummaryUpdate/Default", Model.Summary);
                    }
                </div>
                <div class="border border-top border-secondary-subtle mt-4"></div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="text-dark">Hakkımda</h4>
                <div id="aboutMeContainer">
                    @{
                        if (Model.AboutMe == null)
                            await Html.RenderPartialAsync("Components/_AdminLayoutAboutMeModal/Default", new AboutMe { HomeId = Model.Id });
                        else
                            await Html.RenderPartialAsync("Components/_AdminLayoutAboutMeUpdate/Default", Model.AboutMe);
                    }
                </div>
                <div class="border border-top border-secondary-subtle mt-4"></div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="text-dark">Hizmetlerim</h4>
                @{
                    await Html.RenderPartialAsync("Components/_AdminLayoutServiceModal/Default", new Service { MyServicesId = Model.MyService.Id });
                }
                <div id="serviceContainer">
                    @{
                        if (Model.MyService is { Services: not null })
                            await Html.RenderPartialAsync("Components/_AdminLayoutServices/Default", Model.MyService);
                    }
                </div>
                <div class="border border-top border-secondary-subtle mt-4"></div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="text-dark">İşlerim</h4>
                @{
                    await Html.RenderPartialAsync("Components/_AdminLayoutWorkModal/Default", new Work { MyWorksId = Model.MyWork.Id });
                }
                <div id="workContainer">
                    @{
                        if (Model.MyWork is { Works: not null })
                            await Html.RenderPartialAsync("Components/_AdminLayoutWorks/Default", Model.MyWork);
                    }
                </div>
                <div class="border border-top border-secondary-subtle mt-4"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function handleAddSummary() {
            const form = $('#summaryModalForm');

            form.off('submit');

            form.on('submit',
                function(e) {
                    e.preventDefault();

                    const formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("AddSummary", "Admin")',
                        data: formData,
                        success: function(response) {
                            if (response.isValid) {
                                window.userAlert(response.message, response.messageType);

                                document.querySelector("#btnCloseSummaryModal").click();
                                document.querySelector("#summaryContainer").innerHTML = response.data;
                            } else {
                                showValidationErrors("summaryModalForm", response.errors);
                            }
                        },
                        error: function(xhr, status, error) {}
                    });
                });

            form.submit();
        }

        function handleUpdateSummary() {
            const form = $('#summaryUpdateForm');

            form.off('submit');

            form.on('submit',
                function(e) {
                    e.preventDefault();

                    const formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("UpdateSummary", "Admin")',
                        data: formData,
                        success: function(response) {
                            if (response.isValid) {
                                window.userAlert(response.message, response.messageType);

                                document.querySelector("#summaryContainer").innerHTML = response.data;
                            } else {
                                showValidationErrors("summaryUpdateForm", response.errors);
                            }
                        },
                        error: function(xhr, status, error) {}
                    });
                });

            form.submit();
        }

        function handleDeleteSummary(id) {
            const formData = new FormData();
            formData.append("id", id);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteSummary", "Admin")',
                data: formData,
                contentType: false,
                processData: false,
                success: function(response) {
                    window.userAlert(response.message, response.messageType);
                    document.querySelector("#summaryContainer").innerHTML = response.data;
                },
                error: function(xhr, status, error) {}
            });
        }
    </script>

    <script>
        function handleAddAboutMe() {
            const form = $('#aboutMeModalForm');

            form.off('submit');

            form.on('submit',
                function(e) {
                    e.preventDefault();

                    const formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("AddAboutMe", "Admin")',
                        data: formData,
                        success: function(response) {
                            if (response.isValid) {
                                window.userAlert(response.message, response.messageType);

                                document.querySelector("#btnCloseAboutMeModal").click();
                                document.querySelector("#aboutMeContainer").innerHTML = response.data;
                            } else {
                                showValidationErrors("aboutMeModalForm", response.errors);
                            }
                        },
                        error: function(xhr, status, error) {}
                    });
                });

            form.submit();
        }

        function handleUpdateAboutMe() {
            const form = $('#aboutMeUpdateForm');

            form.off('submit');

            form.on('submit',
                function(e) {
                    e.preventDefault();

                    const formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("UpdateAboutMe", "Admin")',
                        data: formData,
                        success: function(response) {
                            if (response.isValid) {
                                window.userAlert(response.message, response.messageType);

                                document.querySelector("#aboutMeContainer").innerHTML = response.data;
                            } else {
                                showValidationErrors("aboutMeUpdateForm", response.errors);
                            }
                        },
                        error: function(xhr, status, error) {}
                    });
                });

            form.submit();
        }

        function handleDeleteAboutMe(id) {
            const formData = new FormData();
            formData.append("id", id);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteAboutMe", "Admin")',
                data: formData,
                contentType: false,
                processData: false,
                success: function(response) {
                    window.userAlert(response.message, response.messageType);
                    document.querySelector("#aboutMeContainer").innerHTML = response.data;
                },
                error: function(xhr, status, error) {}
            });
        }

        function handleAddSkill() {
            const form = $('#skillModalForm');

            form.off('submit');

            form.on('submit',
                function(e) {
                    e.preventDefault();

                    const formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("AddSkill", "Admin")',
                        data: formData,
                        success: function(response) {
                            if (response.isValid) {
                                window.userAlert(response.message, response.messageType);

                                document.querySelector("#btnCloseSkillModal").click();
                                document.querySelector("#skillContainer").innerHTML = response.data;
                            } else {
                                showValidationErrors("skillModalForm", response.errors);
                            }
                        },
                        error: function(xhr, status, error) {}
                    });
                });

            form.submit();
        }

        function handleDeleteSkill(id, aboutMeId) {
            const formData = new FormData();
            formData.append("id", id);
            formData.append("aboutMeId", aboutMeId);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteSkill", "Admin")',
                data: formData,
                contentType: false,
                processData: false,
                success: function(response) {
                    window.userAlert(response.message, response.messageType);
                    document.querySelector("#skillContainer").innerHTML = response.data;
                },
                error: function(xhr, status, error) {}
            });
        }

        function handleAddEducation() {
            const form = $('#educationModalForm');

            form.off('submit');

            form.on('submit',
                function(e) {
                    e.preventDefault();

                    const formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("AddEducation", "Admin")',
                        data: formData,
                        success: function(response) {
                            if (response.isValid) {
                                window.userAlert(response.message, response.messageType);

                                document.querySelector("#btnCloseEducationModal").click();
                                document.querySelector("#educationContainer").innerHTML = response.data;
                            } else {
                                showValidationErrors("educationModalForm", response.errors);
                            }
                        },
                        error: function(xhr, status, error) {}
                    });
                });

            form.submit();
        }

        function handleDeleteEducation(id, aboutMeId) {
            const formData = new FormData();
            formData.append("id", id);
            formData.append("aboutMeId", aboutMeId);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteEducation", "Admin")',
                data: formData,
                contentType: false,
                processData: false,
                success: function(response) {
                    window.userAlert(response.message, response.messageType);
                    document.querySelector("#educationContainer").innerHTML = response.data;
                },
                error: function(xhr, status, error) {}
            });
        }

        function handleAddExperience() {
            const form = $('#experienceModalForm');

            form.off('submit');

            form.on('submit',
                function(e) {
                    e.preventDefault();

                    const formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("AddExperience", "Admin")',
                        data: formData,
                        success: function(response) {
                            if (response.isValid) {
                                window.userAlert(response.message, response.messageType);

                                document.querySelector("#btnCloseExperienceModal").click();
                                document.querySelector("#experienceContainer").innerHTML = response.data;
                            } else {
                                showValidationErrors("experienceModalForm", response.errors);
                            }
                        },
                        error: function(xhr, status, error) {}
                    });
                });

            form.submit();
        }

        function handleDeleteExperience(id, aboutMeId) {
            const formData = new FormData();
            formData.append("id", id);
            formData.append("aboutMeId", aboutMeId);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteExperience", "Admin")',
                data: formData,
                contentType: false,
                processData: false,
                success: function(response) {
                    window.userAlert(response.message, response.messageType);
                    document.querySelector("#experienceContainer").innerHTML = response.data;
                },
                error: function(xhr, status, error) {}
            });
        }

        function onStillWorkingInputChange(checked) {
            checked ? $('#stillWorkingGroupOnModal').hide() : $('#stillWorkingGroupOnModal').show();
        }
    </script>

    <script>
        function handleAddService() {
            const form = $('#serviceModalForm');

            form.off('submit');

            form.on('submit',
                function(e) {
                    e.preventDefault();

                    const formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("AddService", "Admin")',
                        data: formData,
                        success: function(response) {
                            if (response.isValid) {
                                window.userAlert(response.message, response.messageType);

                                document.querySelector("#btnCloseServiceModal").click();
                                document.querySelector("#serviceContainer").innerHTML = response.data;
                            } else {
                                showValidationErrors("serviceModalForm", response.errors);
                            }
                        },
                        error: function(xhr, status, error) {}
                    });
                });

            form.submit();
        }

        function handleUpdateService(id) {
            const form = $(`#serviceUpdateForm-${id}`);
          
            form.off('submit');

            form.on('submit',
                function(e) {
                    e.preventDefault();

                    const formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("UpdateService", "Admin")',
                        data: formData,
                        success: function(response) {
                            if (response.isValid) {
                                window.userAlert(response.message, response.messageType);

                                document.querySelector("#serviceContainer").innerHTML = response.data;
                            } else {
                                showValidationErrors("serviceUpdateForm", response.errors);
                            }
                        },
                        error: function(xhr, status, error) {}
                    });
                });

            form.submit();
        }

        function handleDeleteService(id, myServiceId) {
            const formData = new FormData();
            formData.append("id", id);
            formData.append("myServiceId", myServiceId);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteService", "Admin")',
                data: formData,
                contentType: false,
                processData: false,
                success: function(response) {
                    window.userAlert(response.message, response.messageType);
                    document.querySelector("#serviceContainer").innerHTML = response.data;
                },
                error: function(xhr, status, error) {}
            });
        }
    </script>
    
    <script>
        function uploadBgImage() {
            const formData = new FormData();
            const file = document.getElementById("workBgFileInput").files[0];
            formData.append("file", file);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("UploadBgImage", "Admin")',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    window.userAlert(response.message, response.messageType);

                    document.querySelector("#workModalBgUrlInput").value = response.bgUrl;
                },
                error: function (xhr, status, error) { }
            });
        }

        function handleAddWork() {
            const form = $('#workModalForm');

            form.off('submit');

            form.on('submit',
                function(e) {
                    e.preventDefault();

                    const formData = $(this).serialize();

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("AddWork", "Admin")',
                        data: formData,
                        success: function(response) {
                            if (response.isValid) {
                                window.userAlert(response.message, response.messageType);

                                document.querySelector("#btnCloseWorkModal").click();
                                document.querySelector("#workContainer").innerHTML = response.data;
                            } else {
                                showValidationErrors("workModalForm", response.errors);
                            }
                        },
                        error: function(xhr, status, error) {}
                    });
                });

            form.submit();
        }

        function handleDeleteWork(id, myWorkId) {
            const formData = new FormData();
            formData.append("id", id);
            formData.append("myWorkId", myWorkId);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteWork", "Admin")',
                data: formData,
                contentType: false,
                processData: false,
                success: function(response) {
                    window.userAlert(response.message, response.messageType);
                    document.querySelector("#workContainer").innerHTML = response.data;
                },
                error: function(xhr, status, error) {}
            });
        }
    </script>

    <script>
        function showValidationErrors(id, errors) {
            $(`#${id} span[data-valmsg-for]`).each(function() {
                $(this).text('');
            });

            $.each(errors,
                function(key, errorMessages) {
                    const $span = $(`#${id} span[data-valmsg-for='${key}']`);
                    if ($span.length > 0) {
                        $span.text(errorMessages.join(', '));
                    }
                });
        }
    </script>
}